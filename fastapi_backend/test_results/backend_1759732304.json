{
  "id": "backend_1759732304",
  "timestamp": "2025-10-05T23:31:51.833060",
  "test_type": "backend",
  "status": "failed",
  "total_tests": 140,
  "passed_tests": 104,
  "failed_tests": 36,
  "duration": 6.990694999694824,
  "output": "...............................FFFFFFFF................................. [ 48%]\n.................................FFFFFFFFFFFFFFFFFFFFFFFFFFFFsssssssss.. [ 96%]\n.....                                                                    [100%]\n=================================== FAILURES ===================================\n______________________________ test_health_check _______________________________\n\ntest_client = <async_generator object test_client at 0x10d0efd30>\n\n    @pytest.mark.asyncio\n    async def test_health_check(test_client):\n        \"\"\"Test health check endpoint.\"\"\"\n>       response = await test_client.get(\"/health\")\nE       AttributeError: 'async_generator' object has no attribute 'get'\n\ntests/test_e2e_api.py:30: AttributeError\n______________________________ test_root_endpoint ______________________________\n\ntest_client = <async_generator object test_client at 0x10dd50d60>\n\n    @pytest.mark.asyncio\n    async def test_root_endpoint(test_client):\n        \"\"\"Test root endpoint.\"\"\"\n>       response = await test_client.get(\"/\")\nE       AttributeError: 'async_generator' object has no attribute 'get'\n\ntests/test_e2e_api.py:40: AttributeError\n___________________________ test_full_user_lifecycle ___________________________\n\ntest_client = <async_generator object test_client at 0x10dd50310>\n\n    @pytest.mark.asyncio\n    async def test_full_user_lifecycle(test_client):\n        \"\"\"Test complete user lifecycle: register -> login -> profile -> update -> delete.\"\"\"\n        # 1. Register user\n        user_data = {\n            \"username\": \"lifecycle_user\",\n            \"password\": \"testpass123\",\n            \"firstName\": \"Lifecycle\",\n            \"lastName\": \"Test\",\n            \"contactEmail\": \"lifecycle@example.com\",\n            \"contactNumber\": \"1234567890\",\n            \"dob\": \"1990-01-01\",\n            \"sex\": \"Male\",\n            \"height\": \"5'8\\\"\",\n            \"location\": \"Test City\",\n            \"education\": \"Bachelor's Degree\",\n            \"workingStatus\": \"Employed\",\n            \"citizenshipStatus\": \"Citizen\"\n        }\n    \n>       response = await test_client.post(\"/api/users/register\", data=user_data, files={\"images\": []})\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_e2e_api.py:68: AttributeError\n__________________________ test_pii_masking_workflow ___________________________\n\ntest_client = <async_generator object test_client at 0x10dd515d0>\n\n    @pytest.mark.asyncio\n    async def test_pii_masking_workflow(test_client):\n        \"\"\"Test complete PII masking workflow.\"\"\"\n        # Register two users\n        user1_data = {\n            \"username\": \"pii_user1\",\n            \"password\": \"testpass123\",\n            \"firstName\": \"PII\",\n            \"lastName\": \"User1\",\n            \"contactEmail\": \"pii1@example.com\",\n            \"contactNumber\": \"555-123-4567\",\n            \"location\": \"123 Main St, New York, NY\",\n            \"workplace\": \"Google Inc, Mountain View\"\n        }\n    \n        user2_data = user1_data.copy()\n        user2_data[\"username\"] = \"pii_user2\"\n        user2_data[\"contactEmail\"] = \"pii2@example.com\"\n        user2_data[\"contactNumber\"] = \"555-987-6543\"\n    \n>       await test_client.post(\"/api/users/register\", data=user1_data, files={\"images\": []})\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_e2e_api.py:145: AttributeError\n__________________________ test_search_and_filtering ___________________________\n\ntest_client = <async_generator object test_client at 0x10dd51e40>\n\n    @pytest.mark.asyncio\n    async def test_search_and_filtering(test_client):\n        \"\"\"Test search functionality with various filters.\"\"\"\n        # Register multiple users with different attributes\n        users_data = [\n            {\n                \"username\": \"search_user1\",\n                \"password\": \"testpass123\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Doe\",\n                \"sex\": \"Male\",\n                \"location\": \"New York, NY\",\n                \"education\": \"Bachelor's Degree\"\n            },\n            {\n                \"username\": \"search_user2\",\n                \"password\": \"testpass123\",\n                \"firstName\": \"Jane\",\n                \"lastName\": \"Smith\",\n                \"sex\": \"Female\",\n                \"location\": \"Los Angeles, CA\",\n                \"education\": \"Master's Degree\"\n            },\n            {\n                \"username\": \"search_user3\",\n                \"password\": \"testpass123\",\n                \"firstName\": \"Bob\",\n                \"lastName\": \"Johnson\",\n                \"sex\": \"Male\",\n                \"location\": \"New York, NY\",\n                \"education\": \"PhD\"\n            }\n        ]\n    \n        for user_data in users_data:\n>           await test_client.post(\"/api/users/register\", data=user_data, files={\"images\": []})\nE           AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_e2e_api.py:225: AttributeError\n___________________________ test_concurrent_requests ___________________________\n\ntest_client = <async_generator object test_client at 0x10dd526b0>\n\n    @pytest.mark.asyncio\n    async def test_concurrent_requests(test_client):\n        \"\"\"Test handling of concurrent requests.\"\"\"\n        # Register a user first\n>       await test_client.post(\"/api/users/register\", data={\n            \"username\": \"concurrent_user\",\n            \"password\": \"testpass123\",\n            \"firstName\": \"Concurrent\",\n            \"lastName\": \"Test\"\n        }, files={\"images\": []})\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_e2e_api.py:257: AttributeError\n___________________________ test_api_error_scenarios ___________________________\n\ntest_client = <async_generator object test_client at 0x10dd52b60>\n\n    @pytest.mark.asyncio\n    async def test_api_error_scenarios(test_client):\n        \"\"\"Test various error scenarios.\"\"\"\n        # Test 404 for non-existent endpoints\n>       response_404 = await test_client.get(\"/api/users/nonexistent\")\nE       AttributeError: 'async_generator' object has no attribute 'get'\n\ntests/test_e2e_api.py:280: AttributeError\n______________________________ test_cors_headers _______________________________\n\ntest_client = <async_generator object test_client at 0x10dd53010>\n\n    @pytest.mark.asyncio\n    async def test_cors_headers(test_client):\n        \"\"\"Test CORS headers are present.\"\"\"\n>       response = await test_client.options(\"/api/users/profile/test\")\nE       AttributeError: 'async_generator' object has no attribute 'options'\n\ntests/test_e2e_api.py:295: AttributeError\n_______________ TestUserRegistration.test_register_user_success ________________\n\nself = <test_routes_integration.TestUserRegistration object at 0x10d184fb0>\nclient = <async_generator object client at 0x10dd53010>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_register_user_success(self, client, sample_user_data):\n        \"\"\"Test successful user registration.\"\"\"\n>       response = await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:15: AttributeError\n__________ TestUserRegistration.test_register_user_duplicate_username __________\n\nself = <test_routes_integration.TestUserRegistration object at 0x10d185280>\nclient = <async_generator object client at 0x10dd50040>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_register_user_duplicate_username(self, client, sample_user_data):\n        \"\"\"Test registration with duplicate username.\"\"\"\n        # Register first user\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:31: AttributeError\n___________ TestUserRegistration.test_register_user_duplicate_email ____________\n\nself = <test_routes_integration.TestUserRegistration object at 0x10d185490>\nclient = <async_generator object client at 0x10dd52c50>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_register_user_duplicate_email(self, client, sample_user_data):\n        \"\"\"Test registration with duplicate email.\"\"\"\n        # Register first user\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:51: AttributeError\n_____________ TestUserRegistration.test_register_user_invalid_data _____________\n\nself = <test_routes_integration.TestUserRegistration object at 0x10d1856a0>\nclient = <async_generator object client at 0x10dd527a0>\n\n    @pytest.mark.asyncio\n    async def test_register_user_invalid_data(self, client):\n        \"\"\"Test registration with invalid data.\"\"\"\n        invalid_data = {\n            \"username\": \"ab\",  # Too short\n            \"password\": \"123\",  # Too short\n            \"firstName\": \"Test\",\n            \"contactEmail\": \"invalid-email\"\n        }\n    \n>       response = await client.post(\n            \"/api/users/register\",\n            data=invalid_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:80: AttributeError\n___________ TestUserRegistration.test_register_user_too_many_images ____________\n\nself = <test_routes_integration.TestUserRegistration object at 0x10d1858b0>\nclient = <async_generator object client at 0x10dd51f30>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_register_user_too_many_images(self, client, sample_user_data):\n        \"\"\"Test registration with too many images.\"\"\"\n        # Create 6 mock image files\n        files = []\n        for i in range(6):\n            files.append((\"images\", (f\"test{i}.jpg\", b\"fake image content\", \"image/jpeg\")))\n    \n>       response = await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files=files\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:96: AttributeError\n_______________________ TestUserLogin.test_login_success _______________________\n\nself = <test_routes_integration.TestUserLogin object at 0x10d1858e0>\nclient = <async_generator object client at 0x10dd516c0>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\nsample_login_data = {'password': 'testpass123', 'username': 'testuser'}\n\n    @pytest.mark.asyncio\n    async def test_login_success(self, client, sample_user_data, sample_login_data):\n        \"\"\"Test successful user login.\"\"\"\n        # Register user first\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:113: AttributeError\n_________________ TestUserLogin.test_login_invalid_credentials _________________\n\nself = <test_routes_integration.TestUserLogin object at 0x10d185130>\nclient = <async_generator object client at 0x10dd51210>\n\n    @pytest.mark.asyncio\n    async def test_login_invalid_credentials(self, client):\n        \"\"\"Test login with invalid credentials.\"\"\"\n        login_data = {\n            \"username\": \"nonexistent\",\n            \"password\": \"wrongpassword\"\n        }\n    \n>       response = await client.post(\"/api/users/login\", data=login_data)\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:136: AttributeError\n____________________ TestUserLogin.test_login_admin_success ____________________\n\nself = <test_routes_integration.TestUserLogin object at 0x10d185bb0>\nclient = <async_generator object client at 0x10dd50c70>\n\n    @pytest.mark.asyncio\n    async def test_login_admin_success(self, client):\n        \"\"\"Test admin login with hardcoded credentials.\"\"\"\n        login_data = {\n            \"username\": \"admin\",\n            \"password\": \"admin\"\n        }\n    \n>       response = await client.post(\"/api/users/login\", data=login_data)\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:149: AttributeError\n__________________ TestUserProfile.test_get_user_profile_own ___________________\n\nself = <test_routes_integration.TestUserProfile object at 0x10d185eb0>\nclient = <async_generator object client at 0x10dd536a0>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_get_user_profile_own(self, client, sample_user_data):\n        \"\"\"Test getting own profile.\"\"\"\n        # Register user\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:165: AttributeError\n_______________ TestUserProfile.test_get_user_profile_other_user _______________\n\nself = <test_routes_integration.TestUserProfile object at 0x10d186150>\nclient = <async_generator object client at 0x10dd53b50>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_get_user_profile_other_user(self, client, sample_user_data):\n        \"\"\"Test getting another user's profile (should be masked).\"\"\"\n        # Register two users\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:183: AttributeError\n_______________ TestUserProfile.test_get_user_profile_not_found ________________\n\nself = <test_routes_integration.TestUserProfile object at 0x10d186360>\nclient = <async_generator object client at 0x10e00c040>\n\n    @pytest.mark.asyncio\n    async def test_get_user_profile_not_found(self, client):\n        \"\"\"Test getting non-existent user profile.\"\"\"\n>       response = await client.get(\"/api/users/profile/nonexistent\")\nE       AttributeError: 'async_generator' object has no attribute 'get'\n\ntests/test_routes_integration.py:214: AttributeError\n___________________ TestUserProfile.test_update_user_profile ___________________\n\nself = <test_routes_integration.TestUserProfile object at 0x10d186570>\nclient = <async_generator object client at 0x10e00c4f0>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_update_user_profile(self, client, sample_user_data):\n        \"\"\"Test updating user profile.\"\"\"\n        # Register user\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:223: AttributeError\n______________________ TestSearch.test_search_users_basic ______________________\n\nself = <test_routes_integration.TestSearch object at 0x10d186870>\nclient = <async_generator object client at 0x10e00c9a0>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_search_users_basic(self, client, sample_user_data):\n        \"\"\"Test basic user search.\"\"\"\n        # Register test user\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:251: AttributeError\n__________________ TestSearch.test_search_users_with_filters ___________________\n\nself = <test_routes_integration.TestSearch object at 0x10d186b10>\nclient = <async_generator object client at 0x10dd53b50>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_search_users_with_filters(self, client, sample_user_data):\n        \"\"\"Test search with filters.\"\"\"\n        # Register test user\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:273: AttributeError\n___________________ TestSearch.test_search_users_pagination ____________________\n\nself = <test_routes_integration.TestSearch object at 0x10d186d20>\nclient = <async_generator object client at 0x10dd536a0>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_search_users_pagination(self, client, sample_user_data):\n        \"\"\"Test search pagination.\"\"\"\n        # Register test user\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:296: AttributeError\n_________________ TestAdminEndpoints.test_get_all_users_admin __________________\n\nself = <test_routes_integration.TestAdminEndpoints object at 0x10d186900>\nclient = <async_generator object client at 0x10dd50c70>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_get_all_users_admin(self, client, sample_user_data):\n        \"\"\"Test getting all users as admin.\"\"\"\n        # Login as admin\n>       admin_login = await client.post(\"/api/users/login\", data={\n            \"username\": \"admin\",\n            \"password\": \"admin\"\n        })\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:322: AttributeError\n________________ TestAdminEndpoints.test_admin_password_change _________________\n\nself = <test_routes_integration.TestAdminEndpoints object at 0x10d186060>\nclient = <async_generator object client at 0x10dd51210>\n\n    @pytest.mark.asyncio\n    async def test_admin_password_change(self, client):\n        \"\"\"Test admin password change.\"\"\"\n        # This endpoint doesn't require authentication in the current implementation\n>       response = await client.post(\"/api/users/admin/change-password\", data={\n            \"current_password\": \"admin\",\n            \"new_password\": \"newadmin123\"\n        })\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:351: AttributeError\n________________ TestAccessRequests.test_create_access_request _________________\n\nself = <test_routes_integration.TestAccessRequests object at 0x10d185640>\nclient = <async_generator object client at 0x10dd516c0>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_create_access_request(self, client, sample_user_data):\n        \"\"\"Test creating PII access request.\"\"\"\n        # Register two users\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:368: AttributeError\n___________ TestAccessRequests.test_create_duplicate_access_request ____________\n\nself = <test_routes_integration.TestAccessRequests object at 0x10d187080>\nclient = <async_generator object client at 0x10dd51f30>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_create_duplicate_access_request(self, client, sample_user_data):\n        \"\"\"Test creating duplicate access request.\"\"\"\n        # Register two users\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:397: AttributeError\n_________________ TestAccessRequests.test_get_access_requests __________________\n\nself = <test_routes_integration.TestAccessRequests object at 0x10d187290>\nclient = <async_generator object client at 0x10dd527a0>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_get_access_requests(self, client, sample_user_data):\n        \"\"\"Test getting access requests.\"\"\"\n        # Register two users and create request\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:430: AttributeError\n_____________________ TestFavorites.test_add_to_favorites ______________________\n\nself = <test_routes_integration.TestFavorites object at 0x10d187590>\nclient = <async_generator object client at 0x10dd52d40>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_add_to_favorites(self, client, sample_user_data):\n        \"\"\"Test adding user to favorites.\"\"\"\n        # Register two users\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:465: AttributeError\n________________ TestFavorites.test_add_duplicate_to_favorites _________________\n\nself = <test_routes_integration.TestFavorites object at 0x10d187830>\nclient = <async_generator object client at 0x10dd52e30>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_add_duplicate_to_favorites(self, client, sample_user_data):\n        \"\"\"Test adding same user to favorites twice.\"\"\"\n        # Register two users\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:490: AttributeError\n_______________________ TestFavorites.test_get_favorites _______________________\n\nself = <test_routes_integration.TestFavorites object at 0x10d187a40>\nclient = <async_generator object client at 0x10e00c400>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_get_favorites(self, client, sample_user_data):\n        \"\"\"Test getting user's favorites.\"\"\"\n        # Register two users and add to favorites\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:519: AttributeError\n_______________________ TestMessaging.test_send_message ________________________\n\nself = <test_routes_integration.TestMessaging object at 0x10d187d10>\nclient = <async_generator object client at 0x10e00c040>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_send_message(self, client, sample_user_data):\n        \"\"\"Test sending a message.\"\"\"\n        # Register two users\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:552: AttributeError\n____________________ TestMessaging.test_send_empty_message _____________________\n\nself = <test_routes_integration.TestMessaging object at 0x10d1a40e0>\nclient = <async_generator object client at 0x10e00ce50>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_send_empty_message(self, client, sample_user_data):\n        \"\"\"Test sending empty message.\"\"\"\n        # Register two users\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:580: AttributeError\n_______________________ TestMessaging.test_get_messages ________________________\n\nself = <test_routes_integration.TestMessaging object at 0x10d1a41a0>\nclient = <async_generator object client at 0x10dd52b60>\nsample_user_data = {'citizenshipStatus': 'Citizen', 'contactEmail': 'test@example.com', 'contactNumber': '1234567890', 'dob': '1990-01-01', ...}\n\n    @pytest.mark.asyncio\n    async def test_get_messages(self, client, sample_user_data):\n        \"\"\"Test getting messages for user.\"\"\"\n        # Register two users and send message\n>       await client.post(\n            \"/api/users/register\",\n            data=sample_user_data,\n            files={\"images\": []}\n        )\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:608: AttributeError\n_______________ TestErrorHandling.test_database_connection_error _______________\n\nself = <test_routes_integration.TestErrorHandling object at 0x10d187a70>\nclient = <async_generator object client at 0x10dd52d40>\n\n    @pytest.mark.asyncio\n    async def test_database_connection_error(self, client):\n        \"\"\"Test handling of database connection errors.\"\"\"\n        # This would require mocking the database connection to fail\n        # For now, we'll test with invalid data that causes validation errors\n>       response = await client.post(\"/api/users/login\", data={\n            \"username\": \"\",  # Invalid\n            \"password\": \"test\"\n        })\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:645: AttributeError\n_________________ TestErrorHandling.test_invalid_json_payload __________________\n\nself = <test_routes_integration.TestErrorHandling object at 0x10d1871d0>\nclient = <async_generator object client at 0x10dd527a0>\n\n    @pytest.mark.asyncio\n    async def test_invalid_json_payload(self, client):\n        \"\"\"Test handling invalid JSON payloads.\"\"\"\n        # Send invalid data that doesn't match expected format\n>       response = await client.post(\"/api/users/login\", data=\"invalid json\")\nE       AttributeError: 'async_generator' object has no attribute 'post'\n\ntests/test_routes_integration.py:657: AttributeError\n=============================== warnings summary ===============================\nvenv/lib/python3.12/site-packages/pydantic/_internal/_config.py:271\nvenv/lib/python3.12/site-packages/pydantic/_internal/_config.py:271\nvenv/lib/python3.12/site-packages/pydantic/_internal/_config.py:271\nvenv/lib/python3.12/site-packages/pydantic/_internal/_config.py:271\nvenv/lib/python3.12/site-packages/pydantic/_internal/_config.py:271\nvenv/lib/python3.12/site-packages/pydantic/_internal/_config.py:271\nvenv/lib/python3.12/site-packages/pydantic/_internal/_config.py:271\nvenv/lib/python3.12/site-packages/pydantic/_internal/_config.py:271\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/venv/lib/python3.12/site-packages/pydantic/_internal/_config.py:271: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\nmodels.py:44\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/models.py:44: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/\n    @validator('username')\n\nmodels.py:50\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/models.py:50: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/\n    @validator('sex')\n\nmodels.py:56\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/models.py:56: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/\n    @validator('eatingPreference')\n\nmodels.py:62\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/models.py:62: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/\n    @validator('citizenshipStatus')\n\nvenv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:252\nvenv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:252\nvenv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:252\nvenv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:252\nvenv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:252\nvenv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:252\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:252: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/\n    warnings.warn(\n\nvenv/lib/python3.12/site-packages/passlib/utils/__init__.py:854\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/venv/lib/python3.12/site-packages/passlib/utils/__init__.py:854: DeprecationWarning: 'crypt' is deprecated and slated for removal in Python 3.13\n    from crypt import crypt as _crypt\n\nvenv/lib/python3.12/site-packages/starlette/routing.py:661\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/venv/lib/python3.12/site-packages/starlette/routing.py:661: DeprecationWarning: async generator function lifespans are deprecated, use an @contextlib.asynccontextmanager function instead\n    warnings.warn(\n\ntests/test_auth.py::TestJWTTokenFunctions::test_create_access_token\ntests/test_auth.py::TestJWTTokenFunctions::test_create_access_token_without_sub\ntests/test_auth.py::TestJWTTokenFunctions::test_create_access_token_with_custom_settings\ntests/test_auth.py::TestGetCurrentUser::test_get_current_user_valid_token\ntests/test_auth.py::TestGetCurrentUser::test_get_current_user_no_sub\ntests/test_auth.py::TestGetCurrentUser::test_get_current_user_wrong_secret\ntests/test_auth.py::TestIntegrationScenarios::test_full_authentication_flow\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/auth.py:31: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    expire = datetime.utcnow() + timedelta(minutes=15)\n\ntests/test_auth.py::TestJWTTokenFunctions::test_create_access_token_with_expiry\ntests/test_auth.py::TestGetCurrentUser::test_get_current_user_expired_token\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/auth.py:29: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    expire = datetime.utcnow() + expires_delta\n\ntests/test_auth.py::TestGetCurrentUser::test_get_current_user_valid_token\ntests/test_auth.py::TestGetCurrentUser::test_get_current_user_expired_token\ntests/test_auth.py::TestGetCurrentUser::test_get_current_user_no_sub\ntests/test_auth.py::TestIntegrationScenarios::test_full_authentication_flow\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/venv/lib/python3.12/site-packages/jose/jwt.py:311: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    now = timegm(datetime.utcnow().utctimetuple())\n\ntests/test_database.py::TestCloseMongoConnection::test_close_mongo_connection_with_client\ntests/test_database.py::TestCloseMongoConnection::test_close_mongo_connection_client_close_exception\ntests/test_database.py::TestDatabaseIntegration::test_full_connection_lifecycle\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/database.py:29: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited\n    client.close()\n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n\ntests/test_models.py::TestUserInDB::test_valid_user_in_db\ntests/test_models.py::TestUserInDB::test_valid_user_in_db\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/venv/lib/python3.12/site-packages/pydantic/main.py:164: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)\n\ntests/test_models.py::TestUserResponse::test_valid_user_response\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/tests/test_models.py:135: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    \"createdAt\": datetime.utcnow(),\n\ntests/test_models.py::TestUserResponse::test_valid_user_response\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/tests/test_models.py:136: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    \"updatedAt\": datetime.utcnow()\n\ntests/test_pii_security.py::TestCreateAccessRequest::test_create_access_request_new\ntests/test_pii_security.py::TestCreateAccessRequest::test_create_access_request_existing_denied\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/pii_security.py:184: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    'requestDate': datetime.utcnow().isoformat(),\n\ntests/test_pii_security.py::TestRespondToAccessRequest::test_respond_to_access_request_approve\ntests/test_pii_security.py::TestRespondToAccessRequest::test_respond_to_access_request_deny\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/pii_security.py:222: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    'responseDate': datetime.utcnow().isoformat()\n\ntests/test_utils.py::TestSaveUploadFile::test_save_upload_file_success\ntests/test_utils.py::TestSaveUploadFile::test_save_upload_file_no_extension\ntests/test_utils.py::TestSaveUploadFile::test_save_upload_file_creates_directory\ntests/test_utils.py::TestSaveUploadFile::test_save_upload_file_exception_handling\ntests/test_utils.py::TestSaveMultipleFiles::test_save_multiple_files_success\ntests/test_utils.py::TestSaveMultipleFiles::test_save_multiple_files_mixed_types\ntests/test_utils.py::TestSaveMultipleFiles::test_save_multiple_files_size_limit\ntests/test_utils.py::TestSaveMultipleFiles::test_save_multiple_files_partial_failure\ntests/test_utils.py::TestSaveMultipleFiles::test_save_multiple_files_empty_list\n  /Users/rajsiripuram02/opt/appsrc/profiledata/fastapi_backend/venv/lib/python3.12/site-packages/_pytest/python.py:182: PytestUnhandledCoroutineWarning: async def functions are not natively supported and have been skipped.\n  You need to install a suitable plugin for your async framework, for example:\n    - anyio\n    - pytest-asyncio\n    - pytest-tornasync\n    - pytest-trio\n    - pytest-twisted\n    warnings.warn(PytestUnhandledCoroutineWarning(msg.format(nodeid)))\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_e2e_api.py::test_health_check - AttributeError: 'async_gene...\nFAILED tests/test_e2e_api.py::test_root_endpoint - AttributeError: 'async_gen...\nFAILED tests/test_e2e_api.py::test_full_user_lifecycle - AttributeError: 'asy...\nFAILED tests/test_e2e_api.py::test_pii_masking_workflow - AttributeError: 'as...\nFAILED tests/test_e2e_api.py::test_search_and_filtering - AttributeError: 'as...\nFAILED tests/test_e2e_api.py::test_concurrent_requests - AttributeError: 'asy...\nFAILED tests/test_e2e_api.py::test_api_error_scenarios - AttributeError: 'asy...\nFAILED tests/test_e2e_api.py::test_cors_headers - AttributeError: 'async_gene...\nFAILED tests/test_routes_integration.py::TestUserRegistration::test_register_user_success\nFAILED tests/test_routes_integration.py::TestUserRegistration::test_register_user_duplicate_username\nFAILED tests/test_routes_integration.py::TestUserRegistration::test_register_user_duplicate_email\nFAILED tests/test_routes_integration.py::TestUserRegistration::test_register_user_invalid_data\nFAILED tests/test_routes_integration.py::TestUserRegistration::test_register_user_too_many_images\nFAILED tests/test_routes_integration.py::TestUserLogin::test_login_success - ...\nFAILED tests/test_routes_integration.py::TestUserLogin::test_login_invalid_credentials\nFAILED tests/test_routes_integration.py::TestUserLogin::test_login_admin_success\nFAILED tests/test_routes_integration.py::TestUserProfile::test_get_user_profile_own\nFAILED tests/test_routes_integration.py::TestUserProfile::test_get_user_profile_other_user\nFAILED tests/test_routes_integration.py::TestUserProfile::test_get_user_profile_not_found\nFAILED tests/test_routes_integration.py::TestUserProfile::test_update_user_profile\nFAILED tests/test_routes_integration.py::TestSearch::test_search_users_basic\nFAILED tests/test_routes_integration.py::TestSearch::test_search_users_with_filters\nFAILED tests/test_routes_integration.py::TestSearch::test_search_users_pagination\nFAILED tests/test_routes_integration.py::TestAdminEndpoints::test_get_all_users_admin\nFAILED tests/test_routes_integration.py::TestAdminEndpoints::test_admin_password_change\nFAILED tests/test_routes_integration.py::TestAccessRequests::test_create_access_request\nFAILED tests/test_routes_integration.py::TestAccessRequests::test_create_duplicate_access_request\nFAILED tests/test_routes_integration.py::TestAccessRequests::test_get_access_requests\nFAILED tests/test_routes_integration.py::TestFavorites::test_add_to_favorites\nFAILED tests/test_routes_integration.py::TestFavorites::test_add_duplicate_to_favorites\nFAILED tests/test_routes_integration.py::TestFavorites::test_get_favorites - ...\nFAILED tests/test_routes_integration.py::TestMessaging::test_send_message - A...\nFAILED tests/test_routes_integration.py::TestMessaging::test_send_empty_message\nFAILED tests/test_routes_integration.py::TestMessaging::test_get_messages - A...\nFAILED tests/test_routes_integration.py::TestErrorHandling::test_database_connection_error\nFAILED tests/test_routes_integration.py::TestErrorHandling::test_invalid_json_payload\n36 failed, 104 passed, 9 skipped, 53 warnings in 5.21s\n",
  "error": ""
}